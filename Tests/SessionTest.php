<?php
use Innovating\Session\Session;
use Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag;
use Symfony\Component\HttpFoundation\Session\Flash\FlashBag;
use Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage;

/**
 * Created by Canan Etaigbenu
 * User: canaan5
 * Date: 4/16/16
 * Time: 5:59 AM
 */
class SessionTest extends TestCase
{
    protected $storage;

    protected $session;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->storage = new MockArraySessionStorage();
        $this->session = new Session($this->storage, new AttributeBag(), new FlashBag());
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->session = null;
        $this->storage = null;
    }

    public function dataProvider()
    {
        return array(
            ['foo', 'bar', ['foo' => 'bar']]
        );
    }

    public function testStart()
    {
        $this->assertEquals('', $this->session->getId());
        $this->assertTrue($this->session->start());
        $this->assertNotEquals('', $this->session->getId());
    }

    public function testIsStarted()
    {
        $this->assertFalse($this->session->isStarted());
        $this->session->start();
        $this->assertTrue($this->session->isStarted());
    }

    public function testSetAndGetId()
    {
        $this->assertEquals('', $this->session->getId());
        $this->session->setId('12345');
        $this->session->start();
        $this->assertEquals('12345', $this->session->getId());
    }

    public function testSetAndGetName()
    {
        $this->assertEquals('MOCKSESSID', $this->session->getName());
        $this->session->setName('KESTYSESSID');
        $this->session->start();
        $this->assertEquals('KESTYSESSID', $this->session->getName());
    }

    /**
     * @dataProvider dataProvider
     */
    public function testSetHasGetRemove($key, $value)
    {
        $this->assertNull($this->session->get($key));
        $this->session->set($key, $value);
        $this->assertEquals($value, $this->session->get($key));
        $this->assertTrue($this->session->has($key));
        $this->session->remove($key);
        $this->assertFalse($this->session->has($key));
    }

    /**
     * @dataProvider dataProvider
     */
    public function testAll($key, $value, $all)
    {
        $this->session->set($key, $value);
        $this->assertEquals($all, $this->session->all());
    }

    public function testReplace()
    {
        $this->session->replace(['name' => 'canaan']);
        $this->assertEquals(['name' => 'canaan'], $this->session->all());
    }

    /**
     * @dataProvider dataProvider
     */
    public function testClear($key, $value)
    {
        $this->session->set($key, $value);
        $this->assertNotEquals(array(), $this->session->all());
        $this->session->clear();
        $this->assertEquals(array(), $this->session->all());
    }

    /**
     * @dataProvider dataProvider
     */
    public function testInvalidate($key, $value)
    {
        $this->session->set($key, $value);
        $this->session->invalidate();
        $this->assertEquals(array(), $this->session->all());
    }

    public function testGetMetaInstance()
    {
        $this->assertInstanceOf('Symfony\Component\HttpFoundation\Session\Storage\MetadataBag', $this->session->getMetadataBag());
    }
}